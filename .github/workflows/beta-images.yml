name: beta

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Git Crypt Version
        id: version
        run: |
          export GIT_CRYPT_VERSION=$(curl -sSL https://api.github.com/repos/AGWA/git-crypt/tags | jq -r "[.[].name | select(contains(\"debian\") | not)] | .[0]")
          echo "GIT_CRYPT_VERSION=${GIT_CRYPT_VERSION}" >> $GITHUB_ENV
          export TAG_EXISTS=$(curl -sSL https://api.github.com/repos/truemark/git-crypt-docker/tags | jq -r ".[].name | contains(\"beta-${GIT_CRYPT_VERSION}\")")
          echo "TAG_EXISTS=${TAG_EXISTS}" >> $GITHUB_ENV
      - name: Build
        if: ${{ env.TAG_EXISTS == 'false' }}
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${GIT_CRYPT_VERSION}" \
            -f amazonlinux.Dockerfile \
            -t truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-amazonlinux \
            -t truemark/git-crypt:beta-amazonlinux \
            .
          IMAGE="truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-amazonlinux" ARCH="amd64" FILE="git-crypt-${GIT_CRYPT_VERSION}-amazonlinux-amd64.tar" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-amazonlinux" ARCH="arm64" FILE="git-crypt-${GIT_CRYPT_VERSION}-amazonlinux-arm64.tar" ./getlayer.sh
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${GIT_CRYPT_VERSION}" \
            -f alpine.Dockerfile \
            -t truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-alpine \
            -t truemark/git-crypt:beta-alpine \
            .
          IMAGE="truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-alpine" ARCH="amd64" FILE="git-crypt-${GIT_CRYPT_VERSION}-alpine-amd64.tar" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-alpine" ARCH="arm64" FILE="git-crypt-${GIT_CRYPT_VERSION}-alpine-arm64.tar" ./getlayer.sh
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${GIT_CRYPT_VERSION}" \
            -f ubuntu-focal.Dockerfile \
            -t truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-ubuntu-focal \
            -t truemark/git-crypt:beta-ubuntu-focal \
            .
          IMAGE="truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-ubuntu-focal" ARCH="amd64" FILE="git-crypt-${GIT_CRYPT_VERSION}-ubuntu-focal-amd64.tar" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-ubuntu-focal" ARCH="arm64" FILE="git-crypt-${GIT_CRYPT_VERSION}-ubuntu-focal-arm64.tar" ./getlayer.sh
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${GIT_CRYPT_VERSION}" \
            -f ubuntu-jammy.Dockerfile \
            -t truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-ubuntu-jammy \
            -t truemark/git-crypt:beta-ubuntu-jammy \
            .
          IMAGE="truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-ubuntu-jammy" ARCH="amd64" FILE="git-crypt-${GIT_CRYPT_VERSION}-ubuntu-jammy-amd64.tar" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${GIT_CRYPT_VERSION}-ubuntu-jammy" ARCH="arm64" FILE="git-crypt-${GIT_CRYPT_VERSION}-ubuntu-jammy-arm64.tar" ./getlayer.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: ${{ env.TAG_EXISTS == 'false' }}
        with:
          name: files
          path: |
            *.tar.gz
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: ${{ env.TAG_EXISTS == 'false' }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: |
            *.tar.gz
          release_name: beta-${{env.GIT_CRYPT_VERSION}}
          tag: beta-${{env.GIT_CRYPT_VERSION}}
          overwrite: true
