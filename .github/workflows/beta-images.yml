name: release

on:
  workflow_dispatch:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Version
        id: version
        run: |
          export GIT_CRYPT_VERSION=$(curl -sSL https://api.github.com/repos/AGWA/git-crypt/tags | jq -r "[.[].name | select(contains(\"debian\") | not)] | .[0]")
          echo "GIT_CRYPT_VERSION=${GIT_CRYPT_VERSION}" >> $GITHUB_ENV
          echo "Version: ${GIT_CRYPT_VERSION}"
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "${{ secrets.AWS_ASSUME_ROLE }}"
          aws-region: "us-east-1"
      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      - name: Setup Buildx Remote Docker
        id: buildx
        uses: truemark/aws-buildx-remote-docker-instance-action@v2
        with:
          security-group-id: "${{ vars.SECURITY_GROUP_ID }}"
          subnet-id: "${{ vars.SUBNET_ID }}"
          instance-profile: "${{ vars.INSTANCE_PROFILE }}"
          region: "us-east-2"
      - name: Build amazonlinux-2
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f amazonlinux-2.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2 \
            -t truemark/git-crypt:beta-amazonlinux-2 \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-amazonlinux-2 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-amazonlinux-2"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-amazonlinux-2"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build amazonlinux-2022
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f amazonlinux-2022.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2022 \
            -t truemark/git-crypt:beta-amazonlinux-2022 \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2022 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2022"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2022"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-amazonlinux-2022 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-amazonlinux-2022"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-amazonlinux-2022"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build amazonlinux-2023
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f amazonlinux-2023.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2023 \
            -t truemark/git-crypt:beta-amazonlinux-2023 \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2023 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2023"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2023"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-amazonlinux-2023 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-amazonlinux-2023"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-amazonlinux-2023"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build ubuntu-focal
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f ubuntu-focal.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-focal \
            -t truemark/git-crypt:beta-ubuntu-focal \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-focal to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-focal"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-focal"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-ubuntu-focal to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-ubuntu-focal"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-ubuntu-focal"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build ubuntu-jammy
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f ubuntu-jammy.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-jammy \
            -t truemark/git-crypt:beta-ubuntu-jammy \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-jammy to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-jammy"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-jammy"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-ubuntu-jammy to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-ubuntu-jammy"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-ubuntu-jammy"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build debian-bullseye
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f debian-bullseye.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bullseye \
            -t truemark/git-crypt:beta-debian-bullseye \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-debian-bullseye to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bullseye"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bullseye"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-debian-bullseye to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-debian-bullseye"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-debian-bullseye"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build debian-bookworm
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f debian-bookworm.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bookworm \
            -t truemark/git-crypt:beta-debian-bookworm \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-debian-bookworm to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bookworm"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bookworm"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-debian-bookworm to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-debian-bookworm"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-debian-bookworm"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build alpine-3.16
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f alpine-3.16.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.16 \
            -t truemark/git-crypt:beta-alpine-3.16 \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.16 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.16"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.16"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-alpine-3.16 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-alpine-3.16"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-alpine-3.16"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build alpine-3.17
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg GIT_CRYPT_VERSION="${{ env.GIT_CRYPT_VERSION }}" \
            -f alpine-3.17.Dockerfile \
            -t truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.17 \
            -t truemark/git-crypt:beta-alpine-3.17 \
            .
      - name: Copy beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.17 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.17"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.17"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy beta-alpine-3.17 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/git:beta-alpine-3.17"
          dest-image: "docker://public.ecr.aws/truemark/git:beta-alpine-3.17"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Package
        run: |
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2" ARCH="amd64" FILE="git-crypt-amazonlinux-2-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2" ARCH="arm64" FILE="git-crypt-amazonlinux-2-arm64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2022" ARCH="amd64" FILE="git-crypt-amazonlinux-2022-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2022" ARCH="arm64" FILE="git-crypt-amazonlinux-2022-arm64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2023" ARCH="amd64" FILE="git-crypt-amazonlinux-2023-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-amazonlinux-2023" ARCH="arm64" FILE="git-crypt-amazonlinux-2023-arm64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-focal" ARCH="amd64" FILE="git-crypt-ubuntu-focal-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-focal" ARCH="arm64" FILE="git-crypt-ubuntu-focal-arm64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-jammy" ARCH="amd64" FILE="git-crypt-ubuntu-jammy-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-ubuntu-jammy" ARCH="arm64" FILE="git-crypt-ubuntu-jammy-arm64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bullseye" ARCH="amd64" FILE="git-crypt-debian-bullseye-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bullseye" ARCH="arm64" FILE="git-crypt-debian-bullseye-arm64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bookworm" ARCH="amd64" FILE="git-crypt-debian-bookworm-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-debian-bookworm" ARCH="arm64" FILE="git-crypt-debian-bookworm-arm64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.16" ARCH="amd64" FILE="git-crypt-alpine-3.16-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.16" ARCH="arm64" FILE="git-crypt-alpine-3.16-arm64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.17" ARCH="amd64" FILE="git-crypt-alpine-3.17-amd64" ./getlayer.sh
          IMAGE="truemark/git-crypt:beta-${{ env.GIT_CRYPT_VERSION }}-alpine-3.17" ARCH="arm64" FILE="git-crypt-alpine-3.17-arm64" ./getlayer.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: files
          path: |
            git-crypt-*
